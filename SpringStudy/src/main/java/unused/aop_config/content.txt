AOP 面向切面的编程

内容
1、什么是AOP以及实现方式
2、AOP的基本概念
3、Sprng中的AOP
4、Schema=based AOP
5、Spring AOP API
6、AspectJ

1.1、AOP概念
AOP，通过预编译和运行期动态代理的方式实现程序功能的统一维护的技术
主要功能：日志记录，性能统计，安全控制，事务处理，异常处理等

1.2、AOP实现方式
预编译：AspectJ
运行期间动态代理：SpringAOP、JBossAOP

1.3、AOP相关概念
Aspect，切面：在多个对象运行的过程中都会被事务控制
Join Point，连接点：程序执行过程中某个特定的点
Advice，通知：在切面的某个特定的连接点上执行的动作
Point Cut，切入点：匹配连接点的断言，在AOP中通知和一个切入点表达式关联
Introduction，引入：在不修改类的代码前提下，为类添加新的方法和属性，类似动态修改class文件
Target Object，目标对象：被一个或多个切面所通知的对象
AOP Proxy，AOP代理：AOP框架创建的对象，用于实现切面契约（aspect contract）(包括通知方法执行等功能)
Weaving，织入：把切面连接到其他应用程序类型或者对象上，并创建一个被通知的对象，分为：编译时织入、类加载时织入、执行时织入

1.3.1 Advice类型
前置通知，在某个join point之前执行的通知，但是不能阻止连接点前的执行，除非他抛出一个异常
返回后通知，在join point执行完成后执行通知
抛出异常后通知
后通知，当某个join point退出的时候执行的通知，及不论正常返回还是异常抛出
环绕通知，包围一个join point的通知

//AOP OOP概念

3.1 Schema=based AOP